
services:

  # === MySQL ===
  mysql:
    image: mysql:8.0
    container_name: task-mngr-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: projectdb
      MYSQL_USER: projectuser
      MYSQL_PASSWORD: projectpass
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  # === Redis ===
  redis:
    image: redis:7
    container_name: task-mngr-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # === Kafka (with KRaft mode, no Zookeeper) ===
  kafka:
    image: bitnami/kafka:latest
    container_name: task-mngr-kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka:9093
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_KRAFT_CLUSTER_ID: kraft-cluster-1
    volumes:
      - kafka_data:/bitnami/kafka

  # === Api Gateway ===
  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    ports:
      - '8080:8080'
    volumes:
      - ./api-gateway:/app
      - /app/node_modules
    environment:
      - JWT_SECRET=p8E$j2K#mN9q5R@vX7zL4wY3hB&tF6cA
      - INTERNAL_SECRET_TOKEN=testing
    depends_on:
      - user-service

  # === User Microservice ===
  user-service:
    build: ./services/user-service
    container_name: user-service
    ports:
      - "4001:4001"
    volumes:
      - ./services/user-service:/app
      - /app/node_modules
      - ./shared:/app/src/shared
    environment:
      - JWT_SECRET=p8E$j2K#mN9q5R@vX7zL4wY3hB&tF6cA
      - DB_HOST=mysql
      - DB_USER=projectuser
      - DB_PASS=projectpass
      - DB_NAME=projectdb
      - REDIS_HOST=redis
      - KAFKA_BROKER=kafka:9092
      - INTERNAL_SECRET_TOKEN=testing
    depends_on:
      - mysql
      - redis
      - kafka

volumes:
  mysql_data:
  redis_data:
  kafka_data:
